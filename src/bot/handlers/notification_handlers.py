import logging
from telegram import Update
from telegram.ext import ContextTypes

from ...core.database import Database
from ...utils.validators import validate_zodiac_sign


class NotificationHandlers:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
    """
    def __init__(self, db: Database, logger):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        
        Args:
            db (Database): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            logger: –õ–æ–≥–≥–µ—Ä
        """
        self.db = db
        self.logger = logger.getChild('NotificationHandlers')
    
    async def set_zodiac(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /set_zodiac
        
        Args:
            update (Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç
        """
        if not context.args:
            await update.message.reply_text(
                "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                "/set_zodiac –æ–≤–µ–Ω\n"
                "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–Ω–∞–∫–∏: –æ–≤–µ–Ω, —Ç–µ–ª–µ—Ü, –±–ª–∏–∑–Ω–µ—Ü—ã, —Ä–∞–∫, –ª–µ–≤, –¥–µ–≤–∞, "
                "–≤–µ—Å—ã, —Å–∫–æ—Ä–ø–∏–æ–Ω, —Å—Ç—Ä–µ–ª–µ—Ü, –∫–æ–∑–µ—Ä–æ–≥, –≤–æ–¥–æ–ª–µ–π, —Ä—ã–±—ã"
            )
            return

        sign = ' '.join(context.args).lower()
        
        if not validate_zodiac_sign(sign):
            await update.message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞!")
            return

        try:
            self.db.add_user_settings(update.effective_user.id, sign)
            await update.message.reply_text(
                f"‚ôå –í–∞—à –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {sign.capitalize()}\n"
                f"–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø!"
            )
        except Exception as e:
            self.logger.error(f"Error saving zodiac: {e}")
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏.")
    
    async def toggle_notifications(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /notifications –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        
        Args:
            update (Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç
        """
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞
        await update.message.reply_text(
            "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã!\n"
            "–í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–∏–µ–º–µ –ª–µ–∫–∞—Ä—Å—Ç–≤ –∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å–≤–æ–¥–∫—É."
        )
    
    async def set_notification_time(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /set_time –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        
        Args:
            update (Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç
        """
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        # –ü–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞
        await update.message.reply_text(
            "‚è∞ –í—Ä–µ–º—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ 9:00."
        )
