import os

import requests
import random
from datetime import datetime
import logging

from bs4 import BeautifulSoup


class Services:
    @staticmethod
    def get_weather(city: str) -> str:
        """
        –ü–æ–ª—É—á–∞–µ–º –ø–æ–≥–æ–¥—É —á–µ—Ä–µ–∑ OpenWeatherMap API
        
        Args:
            city (str): –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
        
        Returns:
            str: –°—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–≥–æ–¥–µ
        """
        api_key = os.getenv("OpenWeatherAPI")  # –ü–æ–ª—É—á–∏—Ç–µ –Ω–∞ openweathermap.org
        base_url = "http://api.openweathermap.org/data/2.5/weather"

        params = {
            'q': city,
            'appid': api_key,
            'units': 'metric',
            'lang': 'ru'
        }

        try:
            response = requests.get(base_url, params=params)
            data = response.json()
            return (f"üå§ –ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
                    f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {data['main']['temp']}¬∞C\n"
                    f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {data['main']['feels_like']}¬∞C\n"
                    f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {data['main']['humidity']}%\n"
                    f"–í–µ—Ç–µ—Ä: {data['wind']['speed']} –º/—Å")
        except Exception as e:
            logging.error(f"Weather API error: {e}")
            return f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è {city}"

    @staticmethod
    def get_exchange_rates() -> str:
        """
        –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç —á–µ—Ä–µ–∑ CryptoCompare API
        
        Returns:
            str: –°—Ç—Ä–æ–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫—É—Ä—Å–∞—Ö –≤–∞–ª—é—Ç
        """
        try:
            # –ö—É—Ä—Å—ã —Ñ–∏–∞—Ç–∞
            usd_rub = requests.get("https://api.exchangerate-api.com/v4/latest/USD").json()['rates']['RUB']

            # –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
            crypto_data = requests.get(
                "https://min-api.cryptocompare.com/data/pricemulti",
                params={'fsyms': 'BTC,ETH,TON', 'tsyms': 'USD'}
            ).json()

            return (f"üí± –ö—É—Ä—Å—ã:\n"
                    f"USD/RUB: {usd_rub:.2f}\n"
                    f"BTC: ${crypto_data['BTC']['USD']}\n"
                    f"ETH: ${crypto_data['ETH']['USD']}\n"
                    f"TON: ${crypto_data['TON']['USD']}")
        except Exception as e:
            logging.error(f"Exchange API error: {e}")
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç"

    @staticmethod
    def get_horoscope(sign: str) -> str:
        """
        –ü–∞—Ä—Å–∏–Ω–≥ –≥–æ—Ä–æ—Å–∫–æ–ø–∞
        
        Args:
            sign (str): –ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞
        
        Returns:
            str: –°—Ç—Ä–æ–∫–∞ —Å –≥–æ—Ä–æ—Å–∫–æ–ø–æ–º
        """
        signs = {
            '–æ–≤–µ–Ω': 'aries',
            '—Ç–µ–ª–µ—Ü': 'taurus',
            '–±–ª–∏–∑–Ω–µ—Ü—ã': 'gemini',
            '—Ä–∞–∫': 'cancer',
            '–ª–µ–≤': 'leo',
            '–¥–µ–≤–∞': 'virgo',
            '–≤–µ—Å—ã': 'libra',
            '—Å–∫–æ—Ä–ø–∏–æ–Ω': 'scorpio',
            '—Å—Ç—Ä–µ–ª–µ—Ü': 'sagittarius',
            '–∫–æ–∑–µ—Ä–æ–≥': 'capricorn',
            '–≤–æ–¥–æ–ª–µ–π': 'aquarius',
            '—Ä—ã–±—ã': 'pisces'
        }

        try:
            sign_en = signs.get(sign.lower(), 'aries')  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–≤–µ–Ω
            url = f"https://horo.mail.ru/prediction/{sign_en}/today/"
            page = requests.get(url)
            soup = BeautifulSoup(page.content, 'html.parser')
            text = soup.find('div', class_='article__text').text.strip()
            return f"‚ôå –ì–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign}:\n{text[:500]}..."  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
        except Exception as e:
            logging.error(f"Horoscope error: {e}")
            return f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è {sign}"

    @staticmethod
    def get_daily_quote() -> str:
        """
        –°–ª—É—á–∞–π–Ω–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞
        
        Returns:
            str: –°—Ç—Ä–æ–∫–∞ —Å —Ü–∏—Ç–∞—Ç–æ–π
        """
        quotes = [
            "–°–µ–≥–æ–¥–Ω—è –ª—É—á—à–∏–π –¥–µ–Ω—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!",
            "–ú–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–æ–ª—å—à–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º.",
            "–£—Å–ø–µ—Ö ‚Äî —ç—Ç–æ —Å—É–º–º–∞ –Ω–µ–±–æ–ª—å—à–∏—Ö —É—Å–∏–ª–∏–π, –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –∏–∑–æ –¥–Ω—è –≤ –¥–µ–Ω—å.",
            "–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–∑–¥–Ω–æ —Å—Ç–∞—Ç—å —Ç–µ–º, –∫–µ–º –≤—ã –≤—Å–µ–≥–¥–∞ —Ö–æ—Ç–µ–ª–∏ –±—ã—Ç—å.",
            "–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ ‚Äî –≤–∞—à–µ –±–æ–≥–∞—Ç—Å—Ç–≤–æ.",
            "–ó–∞–±–æ—Ç–∞ –æ —Å–µ–±–µ ‚Äî —ç—Ç–æ –Ω–µ —ç–≥–æ–∏–∑–º, –∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å.",
            "–†–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å –ø—Ä–∏–µ–º–∞ –ª–µ–∫–∞—Ä—Å—Ç–≤ ‚Äî –∫–ª—é—á –∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–º—É –ª–µ—á–µ–Ω–∏—é.",
            "–ó–¥–æ—Ä–æ–≤—å–µ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –±–æ–ª–µ–∑–Ω–∏, –∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è.",
            "–õ—É—á—à–µ–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ ‚Äî —ç—Ç–æ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞.",
            "–í–∞—à–µ —Ç–µ–ª–æ ‚Äî —Ö—Ä–∞–º –≤–∞—à–µ–π –¥—É—à–∏, –∑–∞–±–æ—Ç—å—Ç–µ—Å—å –æ –Ω–µ–º."
        ]
        return f"üåü –¶–∏—Ç–∞—Ç–∞ –¥–Ω—è:\n{random.choice(quotes)}"
